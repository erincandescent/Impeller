buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            // We use the traditional project directory structure
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    defaultConfig {
        // Add pseudolocale to all builds
        resConfig "zz_ZZ"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile project(':jiraconnect-android-main')
    compile project(':tokenautocomplete:library')
    compile project(':twoway-view:core')
    compile project(':twoway-view:layouts')
    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.android.support:appcompat-v7:20.0.0'
    compile 'oauth.signpost:signpost-core:1.2'
    compile 'com.google.guava:guava:17.0'
    compile 'net.sourceforge.htmlcleaner:htmlcleaner:2.7'
}

configurations {
    all*.exclude group: 'xml-apis'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

def Properties signingConfig = new Properties()
def keyPropFile = new File('keys.properties')
if(keyPropFile.canRead()) {
    signingConfig.load(new FileInputStream(keyPropFile))
}

if (signingConfig.containsKey('STORE_FILE')
        && signingConfig.containsKey('STORE_PASSWORD')
        && signingConfig.containsKey('KEY_ALIAS')
        && signingConfig.containsKey('KEY_PASSWORD')) {
    android.signingConfigs.release.storeFile = file(signingConfig['STORE_FILE'])
    android.signingConfigs.release.storePassword = signingConfig['STORE_PASSWORD']
    android.signingConfigs.release.keyAlias = signingConfig['KEY_ALIAS']
    android.signingConfigs.release.keyPassword = signingConfig['KEY_PASSWORD']
} else {
    android.buildTypes.release.signingConfig = null
    println 'No signing configuration or is incomplete'
}
